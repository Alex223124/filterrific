When joining on a many-to-many relationship, we can get duplicate results.

Example: publications -> roles

I have tried using select('DISTINCT(publications.*')), however that caused issues
where we used more joins in the sorted_by scope and the sort keys were not
part of the select statement.

Here is what worked: On many-to-many relations, don't use join. Use EXISTS and
a subquery instead:

This DOESN'T WORK (will result in duplicate publications, one for each role):

  scope :with_person, lambda{ |person_ids|
    where(['roles.person_id IN () ?', [*person_ids].map(&:to_i)]).joins(:roles)
  }

This WORKS

  scope :with_person, lambda{ |person_ids|
    roles = Role.arel_table
    publications = Publication.arel_table
    where(
      Role.where(roles[:publication_id].eq(publications[:id])) \
           .where(roles[:person_id].in([*person_ids].map(&:to_i))) \
           .exists
    )
  }
